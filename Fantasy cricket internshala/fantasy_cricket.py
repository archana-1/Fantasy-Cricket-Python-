# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fantasy_cricket.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QListWidgetItem
from PyQt5.QtCore import Qt

import newteam as nt
import openteam as ot
import database as db
import evaluateteam as et
   

        

    
class Ui_MainWindow(object):
    def __init__(self):
        super().__init__()
        # keep the 
        # self.n_win=None
        self.newteamui = None
        # count of all players in a team
        self.tm_sltd = None
        self.bat_ct = 0
        self.bow_ct = 0
        self.ar_ct = 0
        self.wk_ct =0
        # team value
        self.team_val = 0
        self.avl_val  = 1000

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout.addWidget(self.label_6)
        self.batsmen_ct = QtWidgets.QLabel(self.centralwidget)
        self.batsmen_ct.setObjectName("batsmen_ct")
        self.horizontalLayout.addWidget(self.batsmen_ct)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout.addWidget(self.label_9)
        self.bowler_ct = QtWidgets.QLabel(self.centralwidget)
        self.bowler_ct.setObjectName("bowler_ct")
        self.horizontalLayout.addWidget(self.bowler_ct)
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout.addWidget(self.label_11)
        self.allrounder_ct = QtWidgets.QLabel(self.centralwidget)
        self.allrounder_ct.setObjectName("allrounder_ct")
        self.horizontalLayout.addWidget(self.allrounder_ct)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout.addWidget(self.label_5)
        self.wkt_ct = QtWidgets.QLabel(self.centralwidget)
        self.wkt_ct.setObjectName("wkt_ct")
        self.horizontalLayout.addWidget(self.wkt_ct)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_2.addWidget(self.label_7)
        self.pt_avl = QtWidgets.QLabel(self.centralwidget)
        self.pt_avl.setObjectName("pt_avl")
        self.horizontalLayout_2.addWidget(self.pt_avl)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.pt_used = QtWidgets.QLabel(self.centralwidget)
        self.pt_used.setObjectName("pt_used")
        self.horizontalLayout_2.addWidget(self.pt_used)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.bat = QtWidgets.QRadioButton(self.centralwidget)
        self.bat.setCheckable(True)
        self.bat.setObjectName("bat")
        self.horizontalLayout_3.addWidget(self.bat)
        self.bow = QtWidgets.QRadioButton(self.centralwidget)
        self.bow.setObjectName("bow")
        self.horizontalLayout_3.addWidget(self.bow)
        self.ar = QtWidgets.QRadioButton(self.centralwidget)
        self.ar.setObjectName("ar")
        self.horizontalLayout_3.addWidget(self.ar)
        self.wk = QtWidgets.QRadioButton(self.centralwidget)
        self.wk.setObjectName("wk")

        # adding all radiobuttons to common list
        self.radiobuttons = []
        self.radiobuttons.append(self.bat)
        self.radiobuttons.append(self.bow)
        self.radiobuttons.append(self.ar)
        self.radiobuttons.append(self.wk)
        # ends 
        
        self.horizontalLayout_3.addWidget(self.wk)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        self.team_name = QtWidgets.QLabel(self.centralwidget)
        self.team_name.setObjectName("team_name")
        self.horizontalLayout_3.addWidget(self.team_name)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.avl_players = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.avl_players.sizePolicy().hasHeightForWidth())
        self.avl_players.setSizePolicy(sizePolicy)
        self.avl_players.setObjectName("avl_players")
        self.horizontalLayout_4.addWidget(self.avl_players)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.team_players = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.team_players.sizePolicy().hasHeightForWidth())
        self.team_players.setSizePolicy(sizePolicy)
        self.team_players.setObjectName("team_players")
        self.horizontalLayout_4.addWidget(self.team_players)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 26))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        self.menuOpen_Team = QtWidgets.QMenu(self.menuManage_Teams)
        self.menuOpen_Team.setObjectName("menuOpen_Team")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        #open team
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        #ends
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        self.actionIntershala11 = QtWidgets.QAction(MainWindow)
        self.actionIntershala11.setObjectName("actionIntershala11")
        self.actionEvaluate_Score = QtWidgets.QAction(MainWindow)
        self.actionEvaluate_Score.setObjectName("actionEvaluate_Score")
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        # self.menuManage_Teams.addAction(self.menuOpen_Team.menuAction())
        self.menuManage_Teams.addAction(self.actionEvaluate_Score)
        self.menubar.addAction(self.menuManage_Teams.menuAction())
        #custom code starts
        self.actionNew_Team.triggered.connect(self.newteam)
        self.actionOpen_Team.triggered.connect(self.openteam)
        self.actionEvaluate_Score.triggered.connect(self.evaluateteam)
        # custom code ends
        # handle radio buttons
        self.bat.toggled.connect(self.show_allplayers)
        self.bow.toggled.connect(self.show_allplayers)
        self.ar.toggled.connect(self.show_allplayers)
        self.wk.toggled.connect(self.show_allplayers)
        #ends
        # handle list widget
        self.avl_players.itemDoubleClicked.connect(self.removelist1)
        self.team_players.itemDoubleClicked.connect(self.removelist2)
        #ends
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # handling list widget
    def removelist1(self, item):
        #get the 14_BAT_120 as list [14, BAT, 120]
        p_data = item.data(Qt.UserRole).split('_')
        # print(p_data)
        if (self.bat_ct+ self.bow_ct + self.ar_ct+ self.wk_ct <11):
            if (p_data[1] == 'WK' and self.wk_ct< 1):
                # allow adding player to team
                
                if self.avl_val - int(p_data[2]) >= 0:
                    
                    self.avl_val = self.avl_val- int(p_data[2])
                    self.team_val = self.team_val+ int(p_data[2])
                    # updating label
                    self.pt_used.setText(str(self.team_val)) 
                    self.pt_avl.setText(str(self.avl_val)) 
                    self.count_players(p_data[1])
                    self.avl_players.takeItem(self.avl_players.row(item))
                    self.team_players.addItem(item.text())
                    # updating team player list at double click
                    db.update_player_list(self.tm_sltd, p_data[0], self.team_val)
           
            if p_data[1] != 'WK':
                # print(self.avl_val)
                # print(self.avl_val - int(p_data[2]))
                if self.avl_val - int(p_data[2]) >= 0:
                    self.avl_val = self.avl_val- int(p_data[2])
                    self.team_val = self.team_val+ int(p_data[2])
                    # updating label
                    self.pt_used.setText(str(self.team_val)) 
                    self.pt_avl.setText(str(self.avl_val))
                    self.count_players(p_data[1])
                    self.avl_players.takeItem(self.avl_players.row(item))
                    self.team_players.addItem(item.text())

                    # updating team player list at double click
                    db.update_player_list(self.tm_sltd, p_data[0], self.team_val)
           



    def removelist2(self, item):
        #get the 14_BAT_120 as list [14, BAT, 120]
        p_data = item.data(Qt.UserRole).split('_')
        self.avl_val = self.avl_val+ int(p_data[2])
        self.team_val = self.team_val- int(p_data[2])
        # updating label
        self.pt_used.setText(str(self.team_val)) 
        self.pt_avl.setText(str(self.avl_val))
        self.count_players(p_data[1], 2)
        self.team_players.takeItem(self.team_players.row(item))
        self.avl_players.addItem(item.text())
        # updating team player list at double click
        db.update_player_list(self.tm_sltd, p_data[0], self.team_val, 2)

        
    #user method newteam to make new window for adding team
    def newteam(self): 
             
        self.n_win = QtWidgets.QMainWindow()
        self.newteamui = nt.newTeamWindow()
        self.newteamui.setupUi(self.n_win)
        self.n_win.show()

    # handling for radio buttons
    def show_allplayers(self):
        if self.tm_sltd:
            for rb in self.radiobuttons: 
                if rb.isChecked() == True:
                #    get_players given the team id, radio btn selected as parameters
                    players = db.get_players(self.tm_sltd, rb.text())
                    self.avl_players.clear()
                    if isinstance(players, tuple):
                        print(players)
                    # print('inside showplayers \n',players)
                    else:
                        for p in players:
                            item = QListWidgetItem(p[1])
                            val = str(p[0])+'_'+p[2]+'_'+str(p[3])
                            item.setData(Qt.UserRole,val)  # Set ID 14_BAT_120
                            self.avl_players.addItem(item)
                    

        
    def openteam(self): 
        # when clicked on open team action this is called
             
        self.o_win = QtWidgets.QMainWindow()
        self.openteamui = ot.openTeamWindow()
        self.openteamui.setupUi(self.o_win,self)
        self.o_win.show()

    # open evaluate team window
    def evaluateteam(self):
        self.e_win = QtWidgets.QMainWindow()
        self.evalutateteamui = et.evaluateTeamWindow()
        self.evalutateteamui.setupUi(self.e_win)
        self.e_win.show()


    # count the batsmen, bowler, all rounder, wicket-k
    def count_players(self, ctg, flag= 1):
        if flag == 1:
            if ctg == 'BAT':
                self.bat_ct += 1
                self.batsmen_ct.setText(str(self.bat_ct))
            if ctg == 'BOW':
                self.bow_ct += 1
                self.bowler_ct.setText(str(self.bow_ct))
            if ctg == 'AR':
                self.ar_ct += 1
                self.allrounder_ct.setText(str(self.ar_ct))
            if ctg == 'WK':
                self.wk_ct += 1
                self.wkt_ct.setText(str(self.wk_ct))
        if flag == 2:
            #when player is removed from team players
            if ctg == 'BAT':
                self.bat_ct -= 1
                self.batsmen_ct.setText(str(self.bat_ct))
            if ctg == 'BOW':
                self.bow_ct -= 1
                self.bowler_ct.setText(str(self.bow_ct))
            if ctg == 'AR':
                self.ar_ct -= 1
                self.allrounder_ct.setText(str(self.ar_ct))
            if ctg == 'WK':
                self.wk_ct -= 1
                self.wkt_ct.setText(str(self.wk_ct))
        if ctg == None:
            self.bat_ct = 0
            self.bow_ct = 0
            self.ar_ct = 0
            self.wk_ct =0
            self.batsmen_ct.setText(str(self.bat_ct))
            self.bowler_ct.setText(str(self.bow_ct))
            self.allrounder_ct.setText(str(self.ar_ct))
            self.wkt_ct.setText(str(self.wk_ct))

      
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Fantasy Cricket"))
        self.label.setText(_translate("MainWindow", "Your Selections :"))
        self.label_6.setText(_translate("MainWindow", "Batsmen: "))
        self.batsmen_ct.setText(_translate("MainWindow", str(self.bat_ct)))
        self.label_9.setText(_translate("MainWindow", "Bowlers:"))
        self.bowler_ct.setText(_translate("MainWindow", str(self.bow_ct)))
        self.label_11.setText(_translate("MainWindow", "Allrounders: "))
        self.allrounder_ct.setText(_translate("MainWindow", str(self.ar_ct)))
        self.label_5.setText(_translate("MainWindow", "Wicket-keepers:"))
        self.wkt_ct.setText(_translate("MainWindow", str(self.wk_ct)))
        self.label_7.setText(_translate("MainWindow", "Points Available: "))
        self.pt_avl.setText(_translate("MainWindow", str(self.avl_val)))
        self.label_3.setText(_translate("MainWindow", "Points Used: "))
        self.pt_used.setText(_translate("MainWindow", str(self.team_val)))
        self.bat.setText(_translate("MainWindow", "BAT"))
        self.bow.setText(_translate("MainWindow", "BOW"))
        self.ar.setText(_translate("MainWindow", "AR"))
        self.wk.setText(_translate("MainWindow", "WK"))
        self.label_2.setText(_translate("MainWindow", "Team Name :"))
        self.team_name.setText(_translate("MainWindow", "#"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Team"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionIntershala11.setText(_translate("MainWindow", "Intershala11"))
        self.actionEvaluate_Score.setText(_translate("MainWindow", "Evaluate Score"))


if __name__ == "__main__":
    import sys
    
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
